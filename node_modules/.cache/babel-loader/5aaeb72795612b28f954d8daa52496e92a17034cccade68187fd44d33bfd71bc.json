{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nam\\\\Desktop\\\\personal-3d-website\\\\src\\\\components\\\\FrontPageScene.js\",\n  _s = $RefreshSig$();\n// src/components/FrontPageScene.js\n\nimport React, { Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, useGLTF, useTexture } from '@react-three/drei';\nimport Header from './Header'; // Import the Header component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HandModel = () => {\n  _s();\n  const {\n    scene\n  } = useGLTF('/robothands.glb');\n  const texture = useTexture('/textures/hand_texture.jpg'); // Update to .jpg\n\n  // Apply the texture to the mesh\n  scene.traverse(child => {\n    if (child.isMesh) {\n      child.material.map = texture;\n      child.material.needsUpdate = true; // Ensure the material updates with the new texture\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene,\n    scale: [2, 2, 2],\n    position: [0, 0, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n_s(HandModel, \"T+lWBRglrmVrP3enWxtviudR9J0=\", false, function () {\n  return [useGLTF, useTexture];\n});\n_c = HandModel;\nconst Checkerboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, -1.5, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      attach: \"geometry\",\n      args: [10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: \"gray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Checkerboard;\nconst FrontPageScene = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Canvas, {\n      style: {\n        height: '100vh',\n        background: 'black'\n      },\n      shadows: true,\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n        position: [0, 5, 5],\n        angle: 0.6,\n        penumbra: 0.5,\n        intensity: 75,\n        castShadow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n        position: [0, -3, 3],\n        angle: 0.7,\n        penumbra: 1,\n        intensity: 1,\n        castShadow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(Checkerboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HandModel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c3 = FrontPageScene;\nexport default FrontPageScene;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"HandModel\");\n$RefreshReg$(_c2, \"Checkerboard\");\n$RefreshReg$(_c3, \"FrontPageScene\");","map":{"version":3,"names":["React","Suspense","Canvas","OrbitControls","useGLTF","useTexture","Header","jsxDEV","_jsxDEV","HandModel","_s","scene","texture","traverse","child","isMesh","material","map","needsUpdate","object","scale","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","Checkerboard","rotation","Math","PI","children","attach","args","color","_c2","FrontPageScene","style","height","background","shadows","intensity","angle","penumbra","castShadow","fallback","_c3","$RefreshReg$"],"sources":["C:/Users/Nam/Desktop/personal-3d-website/src/components/FrontPageScene.js"],"sourcesContent":["// src/components/FrontPageScene.js\r\n\r\nimport React, { Suspense } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls, useGLTF, useTexture } from '@react-three/drei';\r\nimport Header from './Header'; // Import the Header component\r\n\r\nconst HandModel = () => {\r\n  const { scene } = useGLTF('/robothands.glb');\r\n  const texture = useTexture('/textures/hand_texture.jpg'); // Update to .jpg\r\n\r\n  // Apply the texture to the mesh\r\n  scene.traverse((child) => {\r\n    if (child.isMesh) {\r\n      child.material.map = texture;\r\n      child.material.needsUpdate = true; // Ensure the material updates with the new texture\r\n    }\r\n  });\r\n\r\n  return <primitive object={scene} scale={[2, 2, 2]} position={[0, 0, 0]} />;\r\n};\r\n\r\nconst Checkerboard = () => {\r\n  return (\r\n    <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -1.5, 0]}>\r\n      <planeGeometry attach=\"geometry\" args={[10, 10]} />\r\n      <meshStandardMaterial attach=\"material\" color=\"gray\" />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nconst FrontPageScene = () => {\r\n  return (\r\n    <div>\r\n      <Header /> {/* Use the Header component */}\r\n      <Canvas style={{ height: '100vh', background: 'black' }} shadows>\r\n        {/* Lighting */}\r\n        <ambientLight intensity={0.3} />\r\n        <spotLight \r\n          position={[0, 5, 5]} \r\n          angle={0.6} \r\n          penumbra={0.5} \r\n          intensity={75} \r\n          castShadow \r\n        />\r\n        <spotLight \r\n          position={[0, -3, 3]} \r\n          angle={0.7} \r\n          penumbra={1} \r\n          intensity={1} \r\n          castShadow \r\n        />\r\n        \r\n        <Suspense fallback={null}>\r\n          <Checkerboard />\r\n          <HandModel />\r\n        </Suspense>\r\n        \r\n        <OrbitControls />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrontPageScene;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}