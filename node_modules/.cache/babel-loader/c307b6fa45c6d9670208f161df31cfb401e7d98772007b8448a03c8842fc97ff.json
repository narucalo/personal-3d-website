{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nam\\\\Desktop\\\\personal-3d-website\\\\src\\\\components\\\\ThreeDScene.js\",\n  _s = $RefreshSig$();\n// src/components/ThreeDScene.js\n\nimport React, { useRef, useMemo, Suspense } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { TextureLoader } from 'three';\nimport galaxyBackground from '../assets/images/Galaxy-Background-HD.jpg'; // Import the new image\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Galaxy = () => {\n  _s();\n  const pointsRef = useRef();\n\n  // Load the texture using the imported image\n  const texture = useLoader(TextureLoader, galaxyBackground);\n  const particles = useMemo(() => {\n    const stars = new Float32Array(5000 * 3); // 5,000 stars\n    for (let i = 0; i < stars.length; i++) {\n      stars[i] = (Math.random() - 0.5) * 20; // Spread out further in 3D space\n    }\n    return stars;\n  }, []);\n  useFrame(() => {\n    if (pointsRef.current) {\n      pointsRef.current.rotation.y += 0.002;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [-Math.PI / 2, 0, 0],\n      position: [0, -2, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        attach: \"geometry\",\n        args: [10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        attach: \"material\",\n        map: texture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"points\", {\n      ref: pointsRef,\n      children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n        attach: \"geometry\",\n        children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n          attach: \"attributes-position\",\n          array: particles,\n          count: particles.length / 3,\n          itemSize: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n        attach: \"material\",\n        color: \"white\",\n        size: 0.01\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Galaxy, \"B6lbz3Y8yrN+11wO/oZI5E9Oyr8=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c = Galaxy;\nconst Fallback = () => /*#__PURE__*/_jsxDEV(\"mesh\", {\n  children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n    args: [1, 1, 1]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n    color: \"gray\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 3\n}, this);\n_c2 = Fallback;\nconst ThreeDScene = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      background: 'black',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(Fallback, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Galaxy, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ThreeDScene;\nexport default ThreeDScene;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Galaxy\");\n$RefreshReg$(_c2, \"Fallback\");\n$RefreshReg$(_c3, \"ThreeDScene\");","map":{"version":3,"names":["React","useRef","useMemo","Suspense","Canvas","useFrame","useLoader","THREE","TextureLoader","galaxyBackground","jsxDEV","_jsxDEV","Fragment","_Fragment","Galaxy","_s","pointsRef","texture","particles","stars","Float32Array","i","length","Math","random","current","rotation","y","children","PI","position","attach","args","fileName","_jsxFileName","lineNumber","columnNumber","map","ref","array","count","itemSize","color","size","_c","Fallback","_c2","ThreeDScene","style","background","height","fallback","intensity","_c3","$RefreshReg$"],"sources":["C:/Users/Nam/Desktop/personal-3d-website/src/components/ThreeDScene.js"],"sourcesContent":["// src/components/ThreeDScene.js\r\n\r\nimport React, { useRef, useMemo, Suspense } from 'react';\r\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\r\nimport * as THREE from 'three';\r\nimport { TextureLoader } from 'three';\r\nimport galaxyBackground from '../assets/images/Galaxy-Background-HD.jpg'; // Import the new image\r\n\r\nconst Galaxy = () => {\r\n  const pointsRef = useRef();\r\n\r\n  // Load the texture using the imported image\r\n  const texture = useLoader(TextureLoader, galaxyBackground);\r\n\r\n  const particles = useMemo(() => {\r\n    const stars = new Float32Array(5000 * 3); // 5,000 stars\r\n    for (let i = 0; i < stars.length; i++) {\r\n      stars[i] = (Math.random() - 0.5) * 20; // Spread out further in 3D space\r\n    }\r\n    return stars;\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if (pointsRef.current) {\r\n      pointsRef.current.rotation.y += 0.002;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -2, 0]}>\r\n        <planeGeometry attach=\"geometry\" args={[10, 10]} />\r\n        <meshBasicMaterial attach=\"material\" map={texture} />\r\n      </mesh>\r\n      <points ref={pointsRef}>\r\n        <bufferGeometry attach=\"geometry\">\r\n          <bufferAttribute\r\n            attach=\"attributes-position\"\r\n            array={particles}\r\n            count={particles.length / 3}\r\n            itemSize={3}\r\n          />\r\n        </bufferGeometry>\r\n        <pointsMaterial attach=\"material\" color=\"white\" size={0.01} /> {/* Adjusted size */}\r\n      </points>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Fallback = () => (\r\n  <mesh>\r\n    <boxGeometry args={[1, 1, 1]} />\r\n    <meshBasicMaterial color=\"gray\" />\r\n  </mesh>\r\n);\r\n\r\nconst ThreeDScene = () => {\r\n  return (\r\n    <Canvas style={{ background: 'black', height: '100vh' }}>\r\n      <Suspense fallback={<Fallback />}>\r\n        <Galaxy />\r\n      </Suspense>\r\n      <ambientLight intensity={0.5} />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default ThreeDScene;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}